// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int           @id @default(autoincrement())
  name         String
  is_active    Boolean       @default(false)
  password     String
  description  String?
  title        String?
  profileImage String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deletedAt    DateTime?
  jargon       jargon[]
  portofolio   portofolio[]
  certificate  certificate[]
}

model jargon {
  id             Int       @id @default(autoincrement())
  user_id        Int
  primary_text   String
  secondary_text String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
  user           user?      @relation(fields: [user_id], references: [id])
}

model category {
  id         Int          @id @default(autoincrement())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  portofolio portofolio[]
}

model tag {
  id             Int              @id @default(autoincrement())
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  portofolio_tag portofolio_tag[]
}

model portofolio {
  id             Int              @id @default(autoincrement())
  user_id        Int
  category_id    Int
  title          String
  description    String
  thumbnail      String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  deletedAt      DateTime?
  user           user             @relation(fields: [user_id], references: [id])
  category       category         @relation(fields: [category_id], references: [id])
  portofolioTag portofolio_tag[]
}

model portofolio_tag {
  id            Int        @id @default(autoincrement())
  portofolio_id Int
  tag_id        Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  deletedAt     DateTime?
  portofolio    portofolio @relation(fields: [portofolio_id], references: [id])
  tag           tag        @relation(fields: [tag_id], references: [id])
}

model certificate {
  id          Int       @id @default(autoincrement())
  user_id     Int
  title       String
  description String
  thumbnail   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  user        user      @relation(fields: [user_id], references: [id])
}
